JSON
 1. Создать внешний репозиторий c названием JSON. == Git Hub /Repositories/new/Create a new repository/указываем название "JSON"/кнопка Create repository 
 2. Клонировать репозиторий JSON на локальный компьютер.
 == на git hub заходим в репозиторий JSON/нажимаем кнопку code/копируем ссылку репозитория/запускаем Git Bash/git clone https://github.com/Defkant/JSON.git
 3. Внутри локального JSON создать файл “new.json”. == touch new.json
 4. Добавить файл под гит. == git add new.json
 5. Закоммитить файл. == git commit -m "описание действия"
 6. Отправить файл на внешний GitHub репозиторий. == git push
 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 === == vim new.json/i/ниже приведен пример содержания файла в формате JSON (используем {"ключ":"значение"})/Esc/:wq 
  {
	"surname": "Алексеев",
 }
 
 8. Отправить изменения на внешний репозиторий. == git commit -am "описание действия"/git push 
 9. Создать файл preferences.json == touch preferences.json
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 == vim preferences.json/i/ниже приведен пример содержания файла в формате JSON (используем {"ключ":"значение"}) /Esc/-wq
 {
	"Favorite_Movie": "The Shawshenko Redemption",
 }
 
 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 == touch sklls.json/vim skills.json/i/ниже приведен пример содержания файла в формате JSON(используем {"ключ":"значение"}) /Esc/:wq
 {
	"skill_1": "Базовая теория SDLC, STLC",
 }
 
 12. Отправить сразу 2 файла на внешний репозиторий. == git push
 13. На веб интерфейсе создать файл bug_report.json. == Defkant/JSON/add file/create new file/bug_report.txt
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе. == "описание"/кнопка commit chenges 
 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. 
 == выбрать файл в списке/шелкнуть ЛКМ по названию файла/нажать на кнопку edit this file/добавить текст/"описание"/нажать кнопку commit chenges 
 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе. == "описание"/кнопка commit chenges 
 17. Синхронизировать внешний и локальный репозиторий JSON == git pull
